{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/DishdetailComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","object","src","image","alt","name","Menu","props","console","log","menu","dishes","map","isLoading","errMess","active","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","JSON","stringify","alert","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","event","username","value","password","remember","checked","preventDefault","dark","expand","height","isOpen","navbar","outline","toggle","innerRef","input","CommentForm","postComment","dishId","rating","author","comment","RenderDish","RenderComments","comments","menuComment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","useParams","filter","parseInt","c","Footer","About","RenderLeader","body","leaders","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","addComment","ActionTypes","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","resetFeedbackForm","fetchComments","fetchPromos","fetchLeaders","HomePage","featured","promotions","promo","classNames","timeout","location","router","path","element","exact","commentsErrMess","key","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newFeedback","actions","reset","useLocation","navigate","useNavigate","params","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7acb1745.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Loading = () =>{\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n    function RenderMenuItem({dish, onClick}){\n        return(\n            <Card>\n                <Link to = {`/menu/${dish.id}`} >\n                    <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>    \n            </Card>  \n        );\n    }\n\n    //es5 style fuction\n    const Menu = (props) => {\n        console.log(props);\n        const menu = props.dishes.dishes.map((dish)=>{\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish} />\n                </div>\n            );\n        });\n\n        if(props.dishes.isLoading){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to='/home'>Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                            {menu}\n                    </div>\n                </div>\n            );\n    }\n\n    \n\n\n\nexport default Menu;","import React from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from \"./LoadingComponent\";\nimport {baseUrl} from \"../shared/baseUrl\";\nimport {FadeTransform} from 'react-animation-components';\n\n\nfunction RenderCard({item, isLoading, errMess}){\n    console.log(item);\n    console.log(isLoading);\n    if(isLoading){\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess){\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return(\n            <FadeTransform \n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>\n                            {item.name}\n                        </CardTitle>\n                        {item.designation ? <CardSubtitle>\n                            {item.designation}\n                        </CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n}\n\nfunction Home(props){\n    console.log(props);\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12   col-md m-1\">\n                    <RenderCard item={props.dish}\n                                isLoading={props.dishesLoading}\n                                errMess={props.dishesErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                    isLoading={props.promosLoading}\n                    errMess={props.promosErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                    isLoading={props.leadersLoading}\n                    errMess={props.leadersErrMess} />\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button,  Label,  Call, Col, Row} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, Form, Errors, actions} from 'react-redux-form';\n\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n        \n        this.handleSubmit = this.handleSubmit.bind(this); //why??\n\n    }\n  \n\n    handleSubmit(values){\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values));\n        console.log(this.props);\n        // this.props.resetFeedbackForm();\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message)\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to='/home'>Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>\n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                       />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                     />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                               \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                       />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: \"Must be a number\"\n                                        }}\n                                    />\n                                   \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Emaiil\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                             \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6,offset:2}} > \n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>                                   \n                                </Col>\n                                <Col md={{size: 3,offset:1}} > \n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>                                   \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport {Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem, Button, \n        Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component{\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        isNavOpen: false,\n        isModalOpen: false\n      }\n      this.toggleNav = this.toggleNav.bind(this);\n      this.toggleModal = this.toggleModal.bind(this);\n      this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      })\n    }\n\n    toggleModal(){\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      })\n\n    }\n\n    handleLogin(event){\n      this.toggleModal();\n      alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked)\n      event.preventDefault();\n    }\n\n    render(){\n        return(\n            <>\n             <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                  <NavbarToggler onClick={this.toggleNav} />\n                  <NavbarBrand className=\"mr-auto\" href=\"/\">\n                    <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                     alt=\"Ristorante Con Fusion\" />\n                  </NavbarBrand>\n                  <Collapse isOpen={this.state.isNavOpen} navbar>\n                    <Nav navbar>\n                      <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/home\">\n                          <span className=\"fa fa-home fa-lg\"></span> Home\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/aboutus\">\n                          <span className=\"fa fa-info fa-lg\"></span> About Us\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/menu\">\n                          <span className=\"fa fa-list fa-lg\"></span> Menu\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/contactus\">\n                          <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                    <Nav className=\"ml-auto\" navbar>\n                      <NavItem>\n                        <Button outline onClick={this.toggleModal}>\n                          <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                        </Button>\n                      </NavItem>\n                    </Nav>\n                  </Collapse>\n                </div>\n              </Navbar>\n              <Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1> Ristorante Con Fusion</h1>\n                            <p>We take insipration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                        </div>\n                    </div>\n                </div>\n\n              </Jumbotron>\n              <Modal isOpen={this.state.isModalOpen} toggle = {this.toggleModal}>\n                <ModalHeader toggle = {this.toggleModal}>\n                  Login\n                </ModalHeader>\n                <ModalBody>\n                  <Form onSubmit={this.handleLogin}>\n                    <FormGroup>\n                      <Label htmlFor=\"username\">Username</Label>\n                      <Input type=\"text\" id=\"username\" name=\"username\"\n                        innerRef={(input) => this.username = input} />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label htmlFor=\"password\">Password</Label>\n                      <Input type=\"password\" id=\"password\" name=\"password\" \n                        innerRef={(input) => this.password = input}/>\n                    </FormGroup>\n                    <FormGroup check>\n                      <Label check>\n                        <Input type=\"checkbox\" name=\"remember\"\n                        innerRef={(input) => this.remember = input} />\n                        Remember me\n                      </Label>\n                    </FormGroup>\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                  </Form>\n                </ModalBody>\n              </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React,{Component} from \"react\";\nimport {Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle,Breadcrumb,BreadcrumbItem,\n        Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Button} from 'reactstrap';\nimport {Link, useParams} from 'react-router-dom'\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport { Loading } from \"./LoadingComponent\";   \nimport {baseUrl} from \"../shared/baseUrl\";\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n      }\n\n      toggleModal(){\n          this.setState({\n              isModalOpen : !this.state.isModalOpen\n          })\n      }\n\n      handleSubmit(values){\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values));\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n\n      render () {\n          \n\n\n        return(\n            <div className=\"container\">\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle = {this.toggleModal}>\n                    <ModalHeader>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>  \n                            <FormGroup>\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" name=\"rating\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required\n                                    }}>\n                                    \n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </Control.select>\n                                \n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    placeholder=\"Your Name\"\n                                    className=\"form-control\" \n                                    validators={{\n                                        required, minLength: minLength(2), maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors \n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required, ',\n                                        minLength: \"Must be greater than 2 characters\",\n                                        maxLength: \"Must be 15 characters or less\"\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                    rows=\"6\"\n                                    className=\"form-control\" />\n                            </FormGroup>\n                            <Button type=\"submit\" color=\"primary\">\n                                Submit\n                            </Button>\n\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n\n            </div>\n            \n        )\n      }\n\n}\n\n    function RenderDish({dish}){\n        \n            return(\n                <FadeTransform\n                    in\n                    transformProps={{\n                        exitTransform: 'scale(0.5) translate(-50%)'\n                    }}>\n                    <Card>\n                        <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>    \n            );\n        \n    }\n\n    function RenderComments({comments, postComment, dishId}){\n        console.log(comments);\n        if(comments !=null){\n            const menuComment = \n                    \n                    <ul className=\"list-unstyled\">\n                        {comments.map((comment) => {\n                            return (\n                                <Fade in>\n                                    <li key={comment.id}>\n                                        <p>{comment.comment}</p>\n                                        <p>\n                                            --{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </li>\n                                </Fade>\n                            );\n                        })}\n                    </ul>\n                return(\n                    <><h4>Comment</h4><div>\n                        <Stagger in>\n                        {menuComment}\n                        </Stagger>\n                    </div><CommentForm postComment={postComment}\n                        dishId={dishId} /></>\n                 );\n        }\n \n        else{\n            return(\n                <div></div>\n            );\n        }\n    }\n\n    const DishDetail = (props) => {\n        let {dishId} = useParams();\n\n        if(props.isLoading){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        console.log(dishId);\n        console.log(props);\n        console.log(props.dishes);\n        console.log(props.comments);\n        console.log(props.postComment);\n\n        const dish = props.dishes.filter((dish) => dish.id === parseInt(dishId,10))[0];\n        const comment = props.comments.filter((c) => c.dishId === parseInt(dishId,10));\n        console.log(comment);\n        console.log(dish);\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{dish.name}</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments comments={comment} \n                        postComment={props.postComment}\n                        dishId={dish.id} />\n                       \n\n                    </div>\n                </div>\n            </div>\n         )\n\n\n    }\n\nexport default DishDetail;","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home </Link></li>\n                            <li><Link to=\"/aboutus\">About </Link></li>\n                            <li><Link to=\"/menu\">Menu </Link></li>\n                            <li><Link to=\"/contactus\">Contact </Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i className=\"fa fa-phone fa-lg\"></i> : +852 1234 5678 <br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321 <br />\n                            <i className=\"fa fa-envelope fa-lg\"></i> : <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net\n                            </a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtubecom\"><i className=\"fa fa-youtube-play\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\n\n\nfunction About(props) {\n\n    function RenderLeader({leader}){\n        return(\n            <Media>\n                <Media object src={leader.image} alt={leader.name} className=\"mr-3\"/>\n                <Media body>\n                    <h3>{leader.name}</h3>\n                    <p>{leader.designation}</p>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>\n        );\n    }\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <Stagger in>\n                <Fade in>\n                    <div key={leader.id} className=\"m-1\">\n                        <RenderLeader leader = {leader}/>\n                    </div>\n                </Fade>\n            </Stagger>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISEHS_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const POST_FEEDBACK='POST_FEEDBACK'","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => { console.log('Post comments ', error.message)\n            alert('Your comment could not be posted\\nError: '+error.message)})\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n        \n}\n\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n\n};\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    }\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => { console.log('Post feedback ', error.message)\n            alert('Your feedback could not be posted\\nError: '+error.message)})\n}","import Menu from './MenuComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport DishDetail from './DishdetailComponent';\nimport Footer from './FooterComponent';\nimport {Routes, Route, Navigate, useParams, \n        useLocation, useNavigate} from 'react-router-dom';\nimport About from './AboutComponent';\nimport {connect} from 'react-redux';\nimport { postFeedback,postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments : state.comments,\n        promotions : state.promotions,\n        leaders : state.leaders\n    }        \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\n    fetchDishes: () => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    fetchLeaders: () => {dispatch(fetchLeaders())}\n\n});\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n        <Component\n          {...props}\n          router={{ location, navigate, params }}\n        />\n      );\n    }\n  \n    return ComponentWithRouterProp;\n  }\n\n\nclass Main extends Component {\n  \n    \n    constructor(props){\n        super(props);\n        // this.props.fetchDishes();\n        // this.props.resetFeedbackForm();\n        // this.props.fetchComments();\n        // this.props.fetchPromos();\n        // this.props.fetchLeaders();\n        console.log(\"constructor\");\n\n    }\n\n    componentDidMount(){\n        this.props.fetchDishes();\n        this.props.resetFeedbackForm();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n        console.log(\"Did mount\");\n\n    }\n\n\n    render() {\n        console.log(this.props);\n        const HomePage = () =>{\n            return(\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                dishesLoading={this.props.dishes.isLoading}\n                dishesErrMess={this.props.dishes.errMess}\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                promosLoading={this.props.promotions.isLoading}\n                promosErrMess={this.props.promotions.errMess}\n                leader ={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                leadersLoading = {this.props.leaders.isLoading}\n                leadersErrMess = {this.props.leaders.errMess} \n\n                />\n            );\n        }\n\n        \n        const DishWithId = ({match}) => {\n            console.log(\"dish With Id\");\n            const {id} = useParams();\n\n            console.log(id);\n\n            console.log(\n                this.state.dishes.filter((dish) => dish.id === Number(id))[0]\n            )\n            return(\n                <DishDetail dish={this.props.dishes.filter((dish) => dish.id === Number(id))[0]} \n                    commnets={this.props.commnets.filter((comment) => comment.dishId === Number(id))[0]}\n                />\n            );\n        }\n\n        return (\n    \n            <div>\n              <Header />\n              <TransitionGroup>\n                <CSSTransition key={this.props.router.location.key} classNames=\"page\" timeout={300}>\n                    <Routes location={this.props.router.location}>\n                        <Route path=\"/home\" element={<HomePage/>} />\n                        <Route exact path=\"/menu\" element={<Menu dishes={this.props.dishes} />} /> // order matters\n                        <Route path=\"/menu/:dishId\" element={<DishDetail dishes={this.props.dishes.dishes} \n                                                                        isLoading={this.props.dishes.isLoading}\n                                                                        errMess={this.props.dishes.errMess}\n                                                                        comments={this.props.comments.comments} \n                                                                        commentsErrMess={this.props.comments.errMess}\n                                                                        postComment={this.props.postComment} />} />\n                        <Route exact path=\"/aboutus\" element={<About leaders={this.props.leaders.leaders} />}/>\n                        <Route exact path=\"/contactus\" element={<Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                                                                            postFeedback={this.props.postFeedback}/>} />\n                        <Route path=\"*\" element={<Navigate to=\"/home\" />}/>\n                    </Routes>\n                </CSSTransition>\n              </TransitionGroup>\n              <Footer/>\n            </div>\n          );\n    }\n\n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n    }, action) =>{\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading:false, errMess: null, dishes: action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading:true, errMess: null, dishes:[]}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading:false, errMess: action.payload, dishes:[]}\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comments: []\n    }, action) =>{\n    switch(action.type){\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading:false, errMess: null, comments: action.payload}\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading:false, errMess: action.payload, comments:[]}\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n    }, action) =>{\n    switch(action.type){\n\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading:false, errMess: null, promotions: action.payload}\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading:true, errMess: null, promotions:[]}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading:false, errMess: action.payload, promotions:[]}\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders:[]\n    }, action) =>{\n    \n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading:false, errMess:null, leaders: action.payload}\n\n        case ActionTypes.LEADERS_LOADING:\n            console.log(\"LEADERS_LOADING\");\n            return {...state, isLoading:true, errMess:null, leaders: []}\n        \n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading:false, errMess:action.payload, leaders:[]}\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import Main from './components/MainComponent';\nimport './App.css';\nimport React, {useState} from 'react';\nimport { Component } from 'react/cjs/react.production.min';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component{\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }  \n\n}\n  \n  \n\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes} from './dishes';\nimport { Comments} from './comments';\nimport { Promotions} from './promotions';\nimport { Leaders} from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders : Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}